AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Gales Dips Fuel Sales Report Download Service
Parameters:
  IAMUsername:
    Description: Username of the IAM user for this service
    Type: String
    Default: sysadmin
  ParamCertificateArn:
    Description: Domain Certificate Arn
    Type: String
  ParamCustomDomainName:
    Description: Custom Domain Name
    Type: String
  ParamHostedZoneId:
    Description: Hosted Zone ID
    Type: String
  ParamKMSKeyID:
    Description: KMS key id
    Type: String
  ParamProjectName:
    Description: Project name
    Type: String
Resources:
  RestApi:
    Type: AWS::Serverless::Api
    DeletionPolicy: Delete
    DependsOn: Lambda
    Properties:
      StageName: Prod
      EndpointConfiguration: REGIONAL
      Auth:
        DefaultAuthorizer: LambdaTokenAuthorizer
        Authorizers:
          LambdaTokenAuthorizer:
            FunctionArn:
              Fn::GetAtt:
              - AuthLambda
              - Arn
            Identity:
              ReauthorizeEvery: 300
      GatewayResponses:
        UNAUTHORIZED:
          StatusCode: 401
          ResponseTemplates:
            application/json: '{ "message": $context.error.messageString }'
          ResponseParameters:
            Headers:
              Access-Control-Expose-Headers: "'WWW-Authenticate'"
              Access-Control-Allow-Origin: "'*'"
              Access-Control-Allow-Headers: "'*'"
      Domain:
        DomainName:
          Ref: ParamCustomDomainName
        CertificateArn:
          Ref: ParamCertificateArn
        EndpointConfiguration: REGIONAL
        Route53:
          HostedZoneId:
            Ref: ParamHostedZoneId
          EvaluateTargetHealth: true
          DistributionDomainName:
            Value:
              Fn::Sub: https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
  Lambda:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: go1.x
      CodeUri: s3://gdps-lambdas/fs-dwnld/ed3de7c0787db4f6c350e1f8635c0afd
      Handler: /fuelsale
      Role:
        Fn::GetAtt:
        - LambdaRole
        - Arn
      Timeout: 10
      MemorySize: 256
      Environment:
        Variables:
          Stage: prod
      Tags:
        BillTo: Gales
      Events:
        Ping:
          Type: Api
          Properties:
            Path: /fuelsale
            Method: GET
            RestApiId:
              Ref: RestApi
            Auth:
              Authorizer: NONE
        Create:
          Type: Api
          Properties:
            Path: /fuelsale
            Method: POST
            RestApiId:
              Ref: RestApi
            Auth:
              Authorizer: LambdaTokenAuthorizer
  AuthLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://gdps-lambdas/fs-dwnld/ed3de7c0787db4f6c350e1f8635c0afd
      Handler: /authorizer
      Runtime: go1.x
      Role:
        Fn::GetAtt:
        - AuthLambdaRole
        - Arn
      Timeout: 10
      MemorySize: 256
      Tags:
        BillTo: Gales
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: FunctionLogAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: '*'
      - PolicyName: FunctionParameterAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ssm:GetParameter*
            - ssm:GetParametersByPath
            Resource:
              Fn::Sub: arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/prod/${ParamProjectName}*
      - PolicyName: FunctionKMS
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - kms:Decrypt
            - kms:DescribeKey
            Resource:
              Fn::Sub: arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/${ParamKMSKeyID}
      - PolicyName: FunctionXRayAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - xray:PutTraceSegments
            - xray:PutTelemetryRecords
            Resource: '*'
      - PolicyName: FunctionS3Access
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:*
            Resource:
              Fn::Sub: arn:aws:s3:::${ParamProjectName}/reports/*
  AuthLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: FunctionParameterAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ssm:GetParametersByPath
            Resource:
              Fn::Sub: arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/prod/${ParamProjectName}*
      - PolicyName: FunctionKMS
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - kms:Decrypt
            - kms:DescribeKey
            Resource:
              Fn::Sub: arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/${ParamKMSKeyID}
      - PolicyName: FunctionLogAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: '*'
Outputs:
  ApiId:
    Description: API ID
    Value:
      Ref: RestApi
  ApiEndpoint:
    Description: API Prod stage endpoint
    Value:
      Fn::Sub: https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
  ApiArn:
    Description: API ARN
    Value:
      Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/
  ApiFQDN:
    Description: API Domain Name
    Value:
      Ref: ParamCustomDomainName
  ApiURL:
    Description: API Url
    Value:
      Fn::Sub: https://${ParamCustomDomainName}/report
  LambdaArn:
    Description: Lambda ARN
    Value:
      Fn::GetAtt:
      - Lambda
      - Arn
  AuthLambdaArn:
    Description: Authorizer Lambda ARN
    Value:
      Fn::GetAtt:
      - AuthLambda
      - Arn
  LambdaRoleArn:
    Description: Lambda Role ARN
    Value:
      Fn::GetAtt:
      - LambdaRole
      - Arn
  AuthLambdaRoleArn:
    Description: Authorizer Lambda Role ARN
    Value:
      Fn::GetAtt:
      - AuthLambdaRole
      - Arn
